name: Continuous integration
on:
  push:
    branches: [master]
permissions:
  id-token: write
jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::535077491190:role/movie-releases-github-actions
          role-session-name: SessionName
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build docker image
        run: |
          docker build . -t ${{steps.login-ecr.outputs.registry}}/movie-releases-portugal:latest
          docker push ${{steps.login-ecr.outputs.registry}}/movie-releases-portugal:latest
  deploy:
    name: Deploy image on lambda
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::535077491190:role/movie-releases-github-actions
          role-session-name: SessionName
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Update aws lambda image
        run: |
          aws lambda update-function-code --function-name UpdateMovieReleasesDaily --image-name ${{steps.login-ecr.outputs.registry}}/movie-releases-portugal:latest
